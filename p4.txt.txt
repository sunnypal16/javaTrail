<<<<<<<<<<<<<<<<<<<neural network>>>>>>>>>>>>>>>>>>>>>>>>


import numpy as np
import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.utils import to_categorical

# Load and preprocess MNIST dataset
(X_train, y_train), (X_test, y_test) = mnist.load_data()
input_shape = 28 * 28  # 28x28 pixels for each image
output_shape = 10  # 10 classes (0-9 digits)

X_train = X_train.reshape(-1, input_shape).astype('float32') / 255.0
X_test = X_test.reshape(-1, input_shape).astype('float32') / 255.0

y_train = to_categorical(y_train, output_shape)
y_test = to_categorical(y_test, output_shape)

# Build the Feedforward Neural Network
model = Sequential([
    Dense(128, activation='relu', input_shape=(input_shape,)),
    Dense(64, activation='relu'),
    Dense(output_shape, activation='softmax')
])

# Compile the model
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

# Train the model
model.fit(X_train, y_train, epochs=10, batch_size=128, validation_split=0.1)

# Evaluate the model on test data
loss, accuracy = model.evaluate(X_test, y_test)
print(f'Test accuracy: {accuracy:.4f}')





<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>